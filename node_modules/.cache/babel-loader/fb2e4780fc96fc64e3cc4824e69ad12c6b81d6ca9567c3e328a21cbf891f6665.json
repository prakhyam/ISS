{"ast":null,"code":"var _jsxFileName = \"/Users/prakhyamylavaram/Desktop/SJSU/Final_Project/ISS_new/src/components/VideoGrid.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoGrid = ({\n  videos = []\n}) => {\n  _s();\n  const [processedVideos, setProcessedVideos] = useState([]);\n  useEffect(() => {\n    // Process videos to extract duration and generate thumbnails\n    const processVideos = async () => {\n      const processedVideoPromises = videos.map(video => {\n        return new Promise(resolve => {\n          // If thumbnail already exists (from URL.createObjectURL), use it\n          if (video.thumbnail && video.thumbnail.startsWith('blob:')) {\n            resolve(video);\n            return;\n          }\n\n          // Create a video element to get duration and thumbnail\n          const videoElement = document.createElement('video');\n          videoElement.preload = 'metadata';\n          videoElement.src = URL.createObjectURL(video.file);\n          videoElement.onloadedmetadata = () => {\n            // Create canvas to generate thumbnail\n            const canvas = document.createElement('canvas');\n            canvas.width = videoElement.videoWidth;\n            canvas.height = videoElement.videoHeight;\n\n            // Seek to middle of the video to capture a representative frame\n            videoElement.currentTime = videoElement.duration / 2;\n            videoElement.onseeked = () => {\n              // Draw video frame on canvas\n              const context = canvas.getContext('2d');\n              context.drawImage(videoElement, 0, 0, canvas.width, canvas.height);\n\n              // Convert canvas to thumbnail\n              const thumbnailDataUrl = canvas.toDataURL('image/jpeg');\n\n              // Convert seconds to MM:SS format\n              const minutes = Math.floor(videoElement.duration / 60);\n              const seconds = Math.floor(videoElement.duration % 60);\n              resolve({\n                ...video,\n                duration: `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`,\n                thumbnail: thumbnailDataUrl\n              });\n\n              // Revoke object URLs to free memory\n              URL.revokeObjectURL(videoElement.src);\n            };\n          };\n        });\n      });\n\n      // Wait for all videos to be processed\n      const processedVideoResults = await Promise.all(processedVideoPromises);\n      setProcessedVideos(processedVideoResults);\n    };\n\n    // Only process if there are new videos\n    if (videos.length > 0) {\n      processVideos();\n    }\n  }, [videos]);\n\n  // Combine processed videos with sample videos\n  const allVideos = [...processedVideos, {\n    title: \"Usain Bolt Olympic Record\",\n    duration: \"00:13:20\",\n    thumbnail: \"https://via.placeholder.com/300x200\"\n  }, {\n    title: \"Tennis Grand Slam Highlights\",\n    duration: \"00:01:14\",\n    thumbnail: \"https://via.placeholder.com/300x200\"\n  }, {\n    title: \"Soccer World Cup Moment\",\n    duration: \"00:09:09\",\n    thumbnail: \"https://via.placeholder.com/300x200\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-600\",\n        children: [\"Videos \\u2022 \", allVideos.length, \" videos\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-600\",\n        children: \"Index created on Jan 13, 2025\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-3 gap-4\",\n      children: allVideos.map((video, index) => {\n        var _video$file;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border rounded overflow-hidden\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: video.thumbnail,\n            alt: video.title,\n            className: \"w-full h-48 object-cover\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-semibold text-sm truncate\",\n              children: video.title || ((_video$file = video.file) === null || _video$file === void 0 ? void 0 : _video$file.name) || `Video ${index + 1}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-gray-500\",\n              children: video.duration || 'Unknown duration'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoGrid, \"xaHlnd0DAzoQXoMi7qN25gagbNU=\");\n_c = VideoGrid;\nexport default VideoGrid;\nvar _c;\n$RefreshReg$(_c, \"VideoGrid\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","VideoGrid","videos","_s","processedVideos","setProcessedVideos","processVideos","processedVideoPromises","map","video","Promise","resolve","thumbnail","startsWith","videoElement","document","createElement","preload","src","URL","createObjectURL","file","onloadedmetadata","canvas","width","videoWidth","height","videoHeight","currentTime","duration","onseeked","context","getContext","drawImage","thumbnailDataUrl","toDataURL","minutes","Math","floor","seconds","toString","padStart","revokeObjectURL","processedVideoResults","all","length","allVideos","title","children","className","fileName","_jsxFileName","lineNumber","columnNumber","index","_video$file","alt","name","_c","$RefreshReg$"],"sources":["/Users/prakhyamylavaram/Desktop/SJSU/Final_Project/ISS_new/src/components/VideoGrid.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst VideoGrid = ({ videos = [] }) => {\n  const [processedVideos, setProcessedVideos] = useState([]);\n\n  useEffect(() => {\n    // Process videos to extract duration and generate thumbnails\n    const processVideos = async () => {\n      const processedVideoPromises = videos.map(video => {\n        return new Promise((resolve) => {\n          // If thumbnail already exists (from URL.createObjectURL), use it\n          if (video.thumbnail && video.thumbnail.startsWith('blob:')) {\n            resolve(video);\n            return;\n          }\n\n          // Create a video element to get duration and thumbnail\n          const videoElement = document.createElement('video');\n          videoElement.preload = 'metadata';\n          videoElement.src = URL.createObjectURL(video.file);\n          \n          videoElement.onloadedmetadata = () => {\n            // Create canvas to generate thumbnail\n            const canvas = document.createElement('canvas');\n            canvas.width = videoElement.videoWidth;\n            canvas.height = videoElement.videoHeight;\n            \n            // Seek to middle of the video to capture a representative frame\n            videoElement.currentTime = videoElement.duration / 2;\n            \n            videoElement.onseeked = () => {\n              // Draw video frame on canvas\n              const context = canvas.getContext('2d');\n              context.drawImage(videoElement, 0, 0, canvas.width, canvas.height);\n              \n              // Convert canvas to thumbnail\n              const thumbnailDataUrl = canvas.toDataURL('image/jpeg');\n              \n              // Convert seconds to MM:SS format\n              const minutes = Math.floor(videoElement.duration / 60);\n              const seconds = Math.floor(videoElement.duration % 60);\n              \n              resolve({\n                ...video,\n                duration: `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`,\n                thumbnail: thumbnailDataUrl\n              });\n              \n              // Revoke object URLs to free memory\n              URL.revokeObjectURL(videoElement.src);\n            };\n          };\n        });\n      });\n\n      // Wait for all videos to be processed\n      const processedVideoResults = await Promise.all(processedVideoPromises);\n      setProcessedVideos(processedVideoResults);\n    };\n\n    // Only process if there are new videos\n    if (videos.length > 0) {\n      processVideos();\n    }\n  }, [videos]);\n\n  // Combine processed videos with sample videos\n  const allVideos = [\n    ...processedVideos,\n    { \n      title: \"Usain Bolt Olympic Record\", \n      duration: \"00:13:20\",\n      thumbnail: \"https://via.placeholder.com/300x200\"\n    },\n    { \n      title: \"Tennis Grand Slam Highlights\", \n      duration: \"00:01:14\",\n      thumbnail: \"https://via.placeholder.com/300x200\"\n    },\n    { \n      title: \"Soccer World Cup Moment\", \n      duration: \"00:09:09\",\n      thumbnail: \"https://via.placeholder.com/300x200\"\n    }\n  ];\n\n  return (\n    <div>\n      <div className=\"flex justify-between items-center mb-4\">\n        <div className=\"text-gray-600\">\n          Videos • {allVideos.length} videos\n        </div>\n        <div className=\"text-gray-600\">\n          Index created on Jan 13, 2025\n        </div>\n      </div>\n      \n      <div className=\"grid grid-cols-3 gap-4\">\n        {allVideos.map((video, index) => (\n          <div key={index} className=\"border rounded overflow-hidden\">\n            <img \n              src={video.thumbnail} \n              alt={video.title} \n              className=\"w-full h-48 object-cover\" \n            />\n            <div className=\"p-3\">\n              <div className=\"font-semibold text-sm truncate\">\n                {video.title || video.file?.name || `Video ${index + 1}`}\n              </div>\n              <div className=\"text-xs text-gray-500\">\n                {video.duration || 'Unknown duration'}\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default VideoGrid;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAS,GAAGA,CAAC;EAAEC,MAAM,GAAG;AAAG,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1DC,SAAS,CAAC,MAAM;IACd;IACA,MAAMQ,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,MAAMC,sBAAsB,GAAGL,MAAM,CAACM,GAAG,CAACC,KAAK,IAAI;QACjD,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;UAC9B;UACA,IAAIF,KAAK,CAACG,SAAS,IAAIH,KAAK,CAACG,SAAS,CAACC,UAAU,CAAC,OAAO,CAAC,EAAE;YAC1DF,OAAO,CAACF,KAAK,CAAC;YACd;UACF;;UAEA;UACA,MAAMK,YAAY,GAAGC,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;UACpDF,YAAY,CAACG,OAAO,GAAG,UAAU;UACjCH,YAAY,CAACI,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACX,KAAK,CAACY,IAAI,CAAC;UAElDP,YAAY,CAACQ,gBAAgB,GAAG,MAAM;YACpC;YACA,MAAMC,MAAM,GAAGR,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;YAC/CO,MAAM,CAACC,KAAK,GAAGV,YAAY,CAACW,UAAU;YACtCF,MAAM,CAACG,MAAM,GAAGZ,YAAY,CAACa,WAAW;;YAExC;YACAb,YAAY,CAACc,WAAW,GAAGd,YAAY,CAACe,QAAQ,GAAG,CAAC;YAEpDf,YAAY,CAACgB,QAAQ,GAAG,MAAM;cAC5B;cACA,MAAMC,OAAO,GAAGR,MAAM,CAACS,UAAU,CAAC,IAAI,CAAC;cACvCD,OAAO,CAACE,SAAS,CAACnB,YAAY,EAAE,CAAC,EAAE,CAAC,EAAES,MAAM,CAACC,KAAK,EAAED,MAAM,CAACG,MAAM,CAAC;;cAElE;cACA,MAAMQ,gBAAgB,GAAGX,MAAM,CAACY,SAAS,CAAC,YAAY,CAAC;;cAEvD;cACA,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACxB,YAAY,CAACe,QAAQ,GAAG,EAAE,CAAC;cACtD,MAAMU,OAAO,GAAGF,IAAI,CAACC,KAAK,CAACxB,YAAY,CAACe,QAAQ,GAAG,EAAE,CAAC;cAEtDlB,OAAO,CAAC;gBACN,GAAGF,KAAK;gBACRoB,QAAQ,EAAE,GAAGO,OAAO,CAACI,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAIF,OAAO,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;gBACzF7B,SAAS,EAAEsB;cACb,CAAC,CAAC;;cAEF;cACAf,GAAG,CAACuB,eAAe,CAAC5B,YAAY,CAACI,GAAG,CAAC;YACvC,CAAC;UACH,CAAC;QACH,CAAC,CAAC;MACJ,CAAC,CAAC;;MAEF;MACA,MAAMyB,qBAAqB,GAAG,MAAMjC,OAAO,CAACkC,GAAG,CAACrC,sBAAsB,CAAC;MACvEF,kBAAkB,CAACsC,qBAAqB,CAAC;IAC3C,CAAC;;IAED;IACA,IAAIzC,MAAM,CAAC2C,MAAM,GAAG,CAAC,EAAE;MACrBvC,aAAa,CAAC,CAAC;IACjB;EACF,CAAC,EAAE,CAACJ,MAAM,CAAC,CAAC;;EAEZ;EACA,MAAM4C,SAAS,GAAG,CAChB,GAAG1C,eAAe,EAClB;IACE2C,KAAK,EAAE,2BAA2B;IAClClB,QAAQ,EAAE,UAAU;IACpBjB,SAAS,EAAE;EACb,CAAC,EACD;IACEmC,KAAK,EAAE,8BAA8B;IACrClB,QAAQ,EAAE,UAAU;IACpBjB,SAAS,EAAE;EACb,CAAC,EACD;IACEmC,KAAK,EAAE,yBAAyB;IAChClB,QAAQ,EAAE,UAAU;IACpBjB,SAAS,EAAE;EACb,CAAC,CACF;EAED,oBACEZ,OAAA;IAAAgD,QAAA,gBACEhD,OAAA;MAAKiD,SAAS,EAAC,wCAAwC;MAAAD,QAAA,gBACrDhD,OAAA;QAAKiD,SAAS,EAAC,eAAe;QAAAD,QAAA,GAAC,gBACpB,EAACF,SAAS,CAACD,MAAM,EAAC,SAC7B;MAAA;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNrD,OAAA;QAAKiD,SAAS,EAAC,eAAe;QAAAD,QAAA,EAAC;MAE/B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENrD,OAAA;MAAKiD,SAAS,EAAC,wBAAwB;MAAAD,QAAA,EACpCF,SAAS,CAACtC,GAAG,CAAC,CAACC,KAAK,EAAE6C,KAAK;QAAA,IAAAC,WAAA;QAAA,oBAC1BvD,OAAA;UAAiBiD,SAAS,EAAC,gCAAgC;UAAAD,QAAA,gBACzDhD,OAAA;YACEkB,GAAG,EAAET,KAAK,CAACG,SAAU;YACrB4C,GAAG,EAAE/C,KAAK,CAACsC,KAAM;YACjBE,SAAS,EAAC;UAA0B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrC,CAAC,eACFrD,OAAA;YAAKiD,SAAS,EAAC,KAAK;YAAAD,QAAA,gBAClBhD,OAAA;cAAKiD,SAAS,EAAC,gCAAgC;cAAAD,QAAA,EAC5CvC,KAAK,CAACsC,KAAK,MAAAQ,WAAA,GAAI9C,KAAK,CAACY,IAAI,cAAAkC,WAAA,uBAAVA,WAAA,CAAYE,IAAI,KAAI,SAASH,KAAK,GAAG,CAAC;YAAE;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrD,CAAC,eACNrD,OAAA;cAAKiD,SAAS,EAAC,uBAAuB;cAAAD,QAAA,EACnCvC,KAAK,CAACoB,QAAQ,IAAI;YAAkB;cAAAqB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA,GAbEC,KAAK;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAcV,CAAC;MAAA,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClD,EAAA,CApHIF,SAAS;AAAAyD,EAAA,GAATzD,SAAS;AAsHf,eAAeA,SAAS;AAAC,IAAAyD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}