{"ast":null,"code":"var _jsxFileName = \"/Users/prakhyamylavaram/Desktop/SJSU/Final_Project/ISS_new/src/components/VideoGrid.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoGrid = ({\n  videos = []\n}) => {\n  _s();\n  const [processedVideos, setProcessedVideos] = useState([]);\n  useEffect(() => {\n    // Process videos to extract duration\n    const processVideos = async () => {\n      const processedVideoPromises = videos.map(video => {\n        return new Promise(resolve => {\n          // Create a video element to get duration\n          const videoElement = document.createElement('video');\n          videoElement.preload = 'metadata';\n          videoElement.src = URL.createObjectURL(video.file);\n          videoElement.onloadedmetadata = () => {\n            // Convert seconds to MM:SS format\n            const minutes = Math.floor(videoElement.duration / 60);\n            const seconds = Math.floor(videoElement.duration % 60);\n            resolve({\n              ...video,\n              duration: `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`,\n              thumbnail: URL.createObjectURL(video.file)\n            });\n\n            // Revoke object URL to free memory\n            URL.revokeObjectURL(videoElement.src);\n          };\n        });\n      });\n\n      // Wait for all videos to be processed\n      const processedVideoResults = await Promise.all(processedVideoPromises);\n      setProcessedVideos(processedVideoResults);\n    };\n\n    // Only process if there are new videos\n    if (videos.length > 0) {\n      processVideos();\n    }\n  }, [videos]);\n\n  // Combine processed videos with sample videos\n  const allVideos = [...processedVideos, {\n    title: \"Usain Bolt Olympic Record\",\n    duration: \"00:13:20\",\n    thumbnail: \"https://via.placeholder.com/300x200\"\n  }, {\n    title: \"Tennis Grand Slam Highlights\",\n    duration: \"00:01:14\",\n    thumbnail: \"https://via.placeholder.com/300x200\"\n  }, {\n    title: \"Soccer World Cup Moment\",\n    duration: \"00:09:09\",\n    thumbnail: \"https://via.placeholder.com/300x200\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-600\",\n        children: [\"Videos \\u2022 \", allVideos.length, \" videos\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-600\",\n        children: \"Index created on Jan 13, 2025\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-3 gap-4\",\n      children: allVideos.map((video, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border rounded overflow-hidden\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: video.thumbnail,\n          alt: video.title,\n          className: \"w-full h-48 object-cover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-semibold text-sm truncate\",\n            children: video.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs text-gray-500\",\n            children: video.duration\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoGrid, \"xaHlnd0DAzoQXoMi7qN25gagbNU=\");\n_c = VideoGrid;\nexport default VideoGrid;\nvar _c;\n$RefreshReg$(_c, \"VideoGrid\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","VideoGrid","videos","_s","processedVideos","setProcessedVideos","processVideos","processedVideoPromises","map","video","Promise","resolve","videoElement","document","createElement","preload","src","URL","createObjectURL","file","onloadedmetadata","minutes","Math","floor","duration","seconds","toString","padStart","thumbnail","revokeObjectURL","processedVideoResults","all","length","allVideos","title","children","className","fileName","_jsxFileName","lineNumber","columnNumber","index","alt","_c","$RefreshReg$"],"sources":["/Users/prakhyamylavaram/Desktop/SJSU/Final_Project/ISS_new/src/components/VideoGrid.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst VideoGrid = ({ videos = [] }) => {\n  const [processedVideos, setProcessedVideos] = useState([]);\n\n  useEffect(() => {\n    // Process videos to extract duration\n    const processVideos = async () => {\n      const processedVideoPromises = videos.map(video => {\n        return new Promise((resolve) => {\n          // Create a video element to get duration\n          const videoElement = document.createElement('video');\n          videoElement.preload = 'metadata';\n          videoElement.src = URL.createObjectURL(video.file);\n          \n          videoElement.onloadedmetadata = () => {\n            // Convert seconds to MM:SS format\n            const minutes = Math.floor(videoElement.duration / 60);\n            const seconds = Math.floor(videoElement.duration % 60);\n            \n            resolve({\n              ...video,\n              duration: `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`,\n              thumbnail: URL.createObjectURL(video.file)\n            });\n            \n            // Revoke object URL to free memory\n            URL.revokeObjectURL(videoElement.src);\n          };\n        });\n      });\n\n      // Wait for all videos to be processed\n      const processedVideoResults = await Promise.all(processedVideoPromises);\n      setProcessedVideos(processedVideoResults);\n    };\n\n    // Only process if there are new videos\n    if (videos.length > 0) {\n      processVideos();\n    }\n  }, [videos]);\n\n  // Combine processed videos with sample videos\n  const allVideos = [\n    ...processedVideos,\n    { \n      title: \"Usain Bolt Olympic Record\", \n      duration: \"00:13:20\",\n      thumbnail: \"https://via.placeholder.com/300x200\"\n    },\n    { \n      title: \"Tennis Grand Slam Highlights\", \n      duration: \"00:01:14\",\n      thumbnail: \"https://via.placeholder.com/300x200\"\n    },\n    { \n      title: \"Soccer World Cup Moment\", \n      duration: \"00:09:09\",\n      thumbnail: \"https://via.placeholder.com/300x200\"\n    }\n  ];\n\n  return (\n    <div>\n      <div className=\"flex justify-between items-center mb-4\">\n        <div className=\"text-gray-600\">\n          Videos â€¢ {allVideos.length} videos\n        </div>\n        <div className=\"text-gray-600\">\n          Index created on Jan 13, 2025\n        </div>\n      </div>\n      \n      <div className=\"grid grid-cols-3 gap-4\">\n        {allVideos.map((video, index) => (\n          <div key={index} className=\"border rounded overflow-hidden\">\n            <img \n              src={video.thumbnail} \n              alt={video.title} \n              className=\"w-full h-48 object-cover\" \n            />\n            <div className=\"p-3\">\n              <div className=\"font-semibold text-sm truncate\">{video.title}</div>\n              <div className=\"text-xs text-gray-500\">{video.duration}</div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default VideoGrid;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}